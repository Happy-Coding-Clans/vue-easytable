(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-211aab0f"],{"3acc":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h2",[e._v("筛选")]),t("Explain"),t("SingleFilter"),t("MutilFilter"),t("MixtureFilter"),t("CustomIcon"),t("API",{attrs:{title:"API",anchor:"API",desc:"filter 筛选配置"}})],1)},r=[],l=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},i=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("section",{staticClass:"content example-md-doc"},[t("div",{staticClass:"tip"},[t("p",[e._v("1、通过 "),t("code",[e._v("column")]),e._v(" 对象的 "),t("code",[e._v("filter")]),e._v("属性设置筛选功能"),t("br"),e._v(" 2、 "),t("code",[e._v("filterList")]),e._v(" 设置你的筛选条件。包含"),t("code",[e._v("label")]),e._v("、"),t("code",[e._v("value")]),e._v("、"),t("code",[e._v("selected")]),e._v(" 3 个属性"),t("br"),e._v(" 3、 "),t("code",[e._v("isMultiple")]),e._v(" 开启筛选项多选，默认为 false"),t("br"),e._v(" 4、 "),t("code",[e._v("filterConfirm")]),e._v(" 筛选确认函数"),t("br"),e._v(" 5、 "),t("code",[e._v("filterReset")]),e._v(" 筛选重置函数"),t("br")])])])}],o=t("2877"),s={},c=Object(o["a"])(s,l,i,!1,null,null,null),d=c.exports,u=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("section",{staticClass:"content example-md-doc"},[t("anchor",{attrs:{"is-edit":"",label:"单条件筛选",fileName:"single-filter.md"}}),t("demo-block",[t("template",{slot:"source"},[t("element-demo0")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n    <ve-table :max-height="300" :fixed-header="true" :columns="columns" :table-data="tableData" />\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                columns: [\n                    {\n                        field: "name",\n                        key: "a",\n                        title: "Name",\n                        align: "left",\n                        width: "15%",\n                    },\n                    {\n                        field: "date",\n                        key: "b",\n                        title: "Date",\n                        align: "left",\n                        width: "15%",\n                        // filter\n                        filter: {\n                            filterList: [\n                                {\n                                    value: 0,\n                                    label: "1900-05-20",\n                                    selected: false,\n                                },\n                                {\n                                    value: 1,\n                                    label: "1910-06-20",\n                                    selected: false,\n                                },\n                                {\n                                    value: 2,\n                                    label: "2000-07-20",\n                                    selected: false,\n                                },\n                                {\n                                    value: 3,\n                                    label: "2010-08-20",\n                                    selected: false,\n                                },\n                                {\n                                    value: 4,\n                                    label: "2020-09-20",\n                                    selected: false,\n                                },\n                            ],\n                            // filter confirm hook\n                            filterConfirm: (filterList) => {\n                                const labels = filterList\n                                    .filter((x) => x.selected)\n                                    .map((x) => x.label);\n                                this.searchByDateField(labels);\n                            },\n                            // filter reset hook\n                            filterReset: (filterList) => {\n                                this.searchByDateField([]);\n                            },\n                        },\n                    },\n                    {\n                        field: "hobby",\n                        key: "c",\n                        title: "Hobby",\n                        align: "center",\n                        width: "30%",\n                    },\n                    {\n                        field: "address",\n                        key: "d",\n                        title: "Address",\n                        align: "left",\n                        width: "40%",\n                    },\n                ],\n                // real table data\n                tableData: [],\n                // source data\n                sourceData: [\n                    {\n                        name: "John",\n                        date: "1900-05-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Shanghai",\n                        rowKey: 0,\n                    },\n                    {\n                        name: "Dickerson",\n                        date: "1910-06-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Beijing",\n                        rowKey: 1,\n                    },\n                    {\n                        name: "Larsen",\n                        date: "2000-07-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Chongqing",\n                        rowKey: 2,\n                    },\n                    {\n                        name: "Geneva",\n                        date: "2010-08-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Xiamen",\n                        rowKey: 3,\n                    },\n                    {\n                        name: "Jami",\n                        date: "2020-09-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Shenzhen",\n                        rowKey: 4,\n                    },\n                ],\n            };\n        },\n        methods: {\n            // search by date field\n            searchByDateField(labels) {\n                this.tableData = this.sourceData.filter(\n                    (x) => labels.length === 0 || labels.includes(x.date),\n                );\n            },\n        },\n        created() {\n            this.tableData = this.sourceData.slice(0);\n        },\n    };\n<\/script>\n')])])])],2)],1)},f=[];function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function h(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){y(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function y(e,n,t){return n=v(n),n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function v(e){var n=p(e,"string");return"symbol"===b(n)?n:String(n)}function p(e,n){if("object"!==b(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==b(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}var g={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("ve-table",{attrs:{"max-height":300,"fixed-header":!0,columns:e.columns,"table-data":e.tableData}})]],2)},n=[],t={data:function(){var e=this;return{columns:[{field:"name",key:"a",title:"Name",align:"left",width:"15%"},{field:"date",key:"b",title:"Date",align:"left",width:"15%",filter:{filterList:[{value:0,label:"1900-05-20",selected:!1},{value:1,label:"1910-06-20",selected:!1},{value:2,label:"2000-07-20",selected:!1},{value:3,label:"2010-08-20",selected:!1},{value:4,label:"2020-09-20",selected:!1}],filterConfirm:function(n){var t=n.filter((function(e){return e.selected})).map((function(e){return e.label}));e.searchByDateField(t)},filterReset:function(n){e.searchByDateField([])}}},{field:"hobby",key:"c",title:"Hobby",align:"center",width:"30%"},{field:"address",key:"d",title:"Address",align:"left",width:"40%"}],tableData:[],sourceData:[{name:"John",date:"1900-05-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Shanghai",rowKey:0},{name:"Dickerson",date:"1910-06-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Beijing",rowKey:1},{name:"Larsen",date:"2000-07-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Chongqing",rowKey:2},{name:"Geneva",date:"2010-08-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Xiamen",rowKey:3},{name:"Jami",date:"2020-09-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Shenzhen",rowKey:4}]}},methods:{searchByDateField:function(e){this.tableData=this.sourceData.filter((function(n){return 0===e.length||e.includes(n.date)}))}},created:function(){this.tableData=this.sourceData.slice(0)}};return h({render:e,staticRenderFns:n},t)}()}},D=g,w=Object(o["a"])(D,u,f,!1,null,null,null),O=w.exports,_=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("section",{staticClass:"content example-md-doc"},[t("anchor",{attrs:{"is-edit":"",label:"多条件筛选",fileName:"mutil-filter.md"}}),t("demo-block",[t("div",[t("p",[e._v("当筛选框内容很多时，"),t("code",[e._v("maxHeight")]),e._v(" 属性设置筛选框的最大高度")])]),t("template",{slot:"source"},[t("element-demo0")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n    <ve-table :max-height="300" :fixed-header="true" :columns="columns" :table-data="tableData" />\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                columns: [\n                    {\n                        field: "name",\n                        key: "a",\n                        title: "Name",\n                        align: "left",\n                        width: "15%",\n                        // filter\n                        filter: {\n                            filterList: [\n                                { value: 0, label: "John", selected: false },\n                                {\n                                    value: 1,\n                                    label: "Dickerson",\n                                    selected: false,\n                                },\n                                { value: 2, label: "Larsen", selected: false },\n                                { value: 3, label: "Geneva", selected: false },\n                                { value: 4, label: "Jami", selected: false },\n                            ],\n                            isMultiple: true,\n                            // filter confirm hook\n                            filterConfirm: (filterList) => {\n                                const labels = filterList\n                                    .filter((x) => x.selected)\n                                    .map((x) => x.label);\n                                this.searchByNameField(labels);\n                            },\n                            // filter reset hook\n                            filterReset: (filterList) => {\n                                this.searchByNameField([]);\n                            },\n                            // max height\n                            maxHeight: 120,\n                        },\n                    },\n                    {\n                        field: "date",\n                        key: "b",\n                        title: "Date",\n                        align: "left",\n                        width: "15%",\n                    },\n                    {\n                        field: "hobby",\n                        key: "c",\n                        title: "Hobby",\n                        align: "center",\n                        width: "30%",\n                    },\n                    {\n                        field: "address",\n                        key: "d",\n                        title: "Address",\n                        align: "left",\n                        width: "40%",\n                    },\n                ],\n                // real table data\n                tableData: [],\n                // source data\n                sourceData: [\n                    {\n                        name: "John",\n                        date: "1900-05-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Shanghai",\n                        rowKey: 0,\n                    },\n                    {\n                        name: "Dickerson",\n                        date: "1910-06-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Beijing",\n                        rowKey: 1,\n                    },\n                    {\n                        name: "Larsen",\n                        date: "2000-07-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Chongqing",\n                        rowKey: 2,\n                    },\n                    {\n                        name: "Geneva",\n                        date: "2010-08-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Xiamen",\n                        rowKey: 3,\n                    },\n                    {\n                        name: "Jami",\n                        date: "2020-09-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Shenzhen",\n                        rowKey: 4,\n                    },\n                ],\n            };\n        },\n        methods: {\n            // search by name field\n            searchByNameField(labels) {\n                this.tableData = this.sourceData.filter(\n                    (x) => labels.length === 0 || labels.includes(x.name),\n                );\n            },\n        },\n        created() {\n            this.tableData = this.sourceData.slice(0);\n        },\n    };\n<\/script>\n')])])])],2)],1)},x=[];function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function C(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function k(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?C(Object(t),!0).forEach((function(n){N(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):C(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function N(e,n,t){return n=S(n),n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function S(e){var n=A(e,"string");return"symbol"===j(n)?n:String(n)}function A(e,n){if("object"!==j(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==j(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}var P={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("ve-table",{attrs:{"max-height":300,"fixed-header":!0,columns:e.columns,"table-data":e.tableData}})]],2)},n=[],t={data:function(){var e=this;return{columns:[{field:"name",key:"a",title:"Name",align:"left",width:"15%",filter:{filterList:[{value:0,label:"John",selected:!1},{value:1,label:"Dickerson",selected:!1},{value:2,label:"Larsen",selected:!1},{value:3,label:"Geneva",selected:!1},{value:4,label:"Jami",selected:!1}],isMultiple:!0,filterConfirm:function(n){var t=n.filter((function(e){return e.selected})).map((function(e){return e.label}));e.searchByNameField(t)},filterReset:function(n){e.searchByNameField([])},maxHeight:120}},{field:"date",key:"b",title:"Date",align:"left",width:"15%"},{field:"hobby",key:"c",title:"Hobby",align:"center",width:"30%"},{field:"address",key:"d",title:"Address",align:"left",width:"40%"}],tableData:[],sourceData:[{name:"John",date:"1900-05-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Shanghai",rowKey:0},{name:"Dickerson",date:"1910-06-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Beijing",rowKey:1},{name:"Larsen",date:"2000-07-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Chongqing",rowKey:2},{name:"Geneva",date:"2010-08-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Xiamen",rowKey:3},{name:"Jami",date:"2020-09-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Shenzhen",rowKey:4}]}},methods:{searchByNameField:function(e){this.tableData=this.sourceData.filter((function(n){return 0===e.length||e.includes(n.name)}))}},created:function(){this.tableData=this.sourceData.slice(0)}};return k({render:e,staticRenderFns:n},t)}()}},L=P,K=Object(o["a"])(L,_,x,!1,null,null,null),E=K.exports,F=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("section",{staticClass:"content example-md-doc"},[t("anchor",{attrs:{"is-edit":"",label:"混合使用",fileName:"mixture-filter.md"}}),t("p",[e._v("根据不同的业务场景，任意搭配使用")]),t("demo-block",[t("div",[t("p",[e._v("你可以通过"),t("code",[e._v("selected=true")]),e._v(" 设置默认选中的项")])]),t("template",{slot:"source"},[t("element-demo0")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n    <ve-table :max-height="300" :fixed-header="true" :columns="columns" :table-data="tableData" />\n</template>\n\n<script>\n    // name fiter list\n    const NAME_FILTER_LIST = [\n        { value: 0, label: "John", selected: true },\n        { value: 1, label: "Dickerson", selected: true },\n        { value: 2, label: "Larsen", selected: false },\n        { value: 3, label: "Geneva", selected: true },\n        { value: 4, label: "Jami", selected: false },\n    ];\n\n    // date fiter list\n    const Date_FILTER_LIST = [\n        { value: 0, label: "1900-05-20", selected: false },\n        { value: 1, label: "1910-06-20", selected: false },\n        { value: 2, label: "2000-07-20", selected: false },\n        { value: 3, label: "2010-08-20", selected: false },\n        { value: 4, label: "2020-09-20", selected: false },\n    ];\n\n    export default {\n        data() {\n            return {\n                // search data\n                searchData: {\n                    names: [],\n                    date: "",\n                },\n                columns: [\n                    {\n                        field: "name",\n                        key: "a",\n                        title: "Name",\n                        align: "left",\n                        width: "15%",\n                        // filter\n                        filter: {\n                            filterList: NAME_FILTER_LIST,\n                            isMultiple: true,\n                            // filter confirm hook\n                            filterConfirm: (filterList) => {\n                                const labels = filterList\n                                    .filter((x) => x.selected)\n                                    .map((x) => x.label);\n                                this.searchData.names = labels;\n                            },\n                            // filter reset hook\n                            filterReset: (filterList) => {\n                                this.searchData.names = [];\n                            },\n                        },\n                    },\n                    {\n                        field: "date",\n                        key: "b",\n                        title: "Date",\n                        align: "left",\n                        width: "15%",\n                        // filter\n                        filter: {\n                            filterList: Date_FILTER_LIST,\n                            // filter confirm hook\n                            filterConfirm: (filterList) => {\n                                const item = filterList.find((x) => x.selected);\n                                this.searchData.date = item ? item.label : "";\n                            },\n                            // filter reset hook\n                            filterReset: (filterList) => {\n                                this.searchData.date = "";\n                            },\n                        },\n                    },\n                    {\n                        field: "hobby",\n                        key: "c",\n                        title: "Hobby",\n                        align: "center",\n                        width: "30%",\n                    },\n                    {\n                        field: "address",\n                        key: "d",\n                        title: "Address",\n                        align: "left",\n                        width: "40%",\n                    },\n                ],\n                // real table data\n                tableData: [],\n                // source data\n                sourceData: [\n                    {\n                        name: "John",\n                        date: "1900-05-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Shanghai",\n                        rowKey: 0,\n                    },\n                    {\n                        name: "Dickerson",\n                        date: "1910-06-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Beijing",\n                        rowKey: 1,\n                    },\n                    {\n                        name: "Larsen",\n                        date: "2000-07-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Chongqing",\n                        rowKey: 2,\n                    },\n                    {\n                        name: "Geneva",\n                        date: "2010-08-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Xiamen",\n                        rowKey: 3,\n                    },\n                    {\n                        name: "Jami",\n                        date: "2020-09-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Shenzhen",\n                        rowKey: 4,\n                    },\n                ],\n            };\n        },\n        watch: {\n            searchData: {\n                handler: function () {\n                    this.search();\n                },\n                immediate: true,\n                deep: true,\n            },\n        },\n        methods: {\n            // search\n            search() {\n                const { names, date } = this.searchData;\n                this.tableData = this.sourceData.filter(\n                    (x) =>\n                        (date === "" || date === x.date) &&\n                        (names.length === 0 || names.includes(x.name)),\n                );\n            },\n        },\n        created() {\n            // default search by names\n            this.searchData.names = NAME_FILTER_LIST.filter((x) => x.selected).map((x) => x.label);\n        },\n    };\n<\/script>\n')])])])],2)],1)},B=[];function J(e){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},J(e)}function R(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function I(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?R(Object(t),!0).forEach((function(n){T(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):R(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function T(e,n,t){return n=$(n),n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function $(e){var n=G(e,"string");return"symbol"===J(n)?n:String(n)}function G(e,n){if("object"!==J(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==J(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}var M={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("ve-table",{attrs:{"max-height":300,"fixed-header":!0,columns:e.columns,"table-data":e.tableData}})]],2)},n=[],t=[{value:0,label:"John",selected:!0},{value:1,label:"Dickerson",selected:!0},{value:2,label:"Larsen",selected:!1},{value:3,label:"Geneva",selected:!0},{value:4,label:"Jami",selected:!1}],a=[{value:0,label:"1900-05-20",selected:!1},{value:1,label:"1910-06-20",selected:!1},{value:2,label:"2000-07-20",selected:!1},{value:3,label:"2010-08-20",selected:!1},{value:4,label:"2020-09-20",selected:!1}],r={data:function(){var e=this;return{searchData:{names:[],date:""},columns:[{field:"name",key:"a",title:"Name",align:"left",width:"15%",filter:{filterList:t,isMultiple:!0,filterConfirm:function(n){var t=n.filter((function(e){return e.selected})).map((function(e){return e.label}));e.searchData.names=t},filterReset:function(n){e.searchData.names=[]}}},{field:"date",key:"b",title:"Date",align:"left",width:"15%",filter:{filterList:a,filterConfirm:function(n){var t=n.find((function(e){return e.selected}));e.searchData.date=t?t.label:""},filterReset:function(n){e.searchData.date=""}}},{field:"hobby",key:"c",title:"Hobby",align:"center",width:"30%"},{field:"address",key:"d",title:"Address",align:"left",width:"40%"}],tableData:[],sourceData:[{name:"John",date:"1900-05-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Shanghai",rowKey:0},{name:"Dickerson",date:"1910-06-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Beijing",rowKey:1},{name:"Larsen",date:"2000-07-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Chongqing",rowKey:2},{name:"Geneva",date:"2010-08-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Xiamen",rowKey:3},{name:"Jami",date:"2020-09-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Shenzhen",rowKey:4}]}},watch:{searchData:{handler:function(){this.search()},immediate:!0,deep:!0}},methods:{search:function(){var e=this.searchData,n=e.names,t=e.date;this.tableData=this.sourceData.filter((function(e){return(""===t||t===e.date)&&(0===n.length||n.includes(e.name))}))}},created:function(){this.searchData.names=t.filter((function(e){return e.selected})).map((function(e){return e.label}))}};return I({render:e,staticRenderFns:n},r)}()}},H=M,q=Object(o["a"])(H,F,B,!1,null,null,null),z=q.exports,X=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("section",{staticClass:"content example-md-doc"},[t("anchor",{attrs:{"is-edit":"",label:"自定义图标",fileName:"custom-icon.md"}}),e._m(0),t("demo-block",[t("template",{slot:"source"},[t("element-demo0")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n    <ve-table :max-height="300" :fixed-header="true" :columns="columns" :table-data="tableData" />\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                columns: [\n                    {\n                        field: "name",\n                        key: "a",\n                        title: "Name",\n                        align: "left",\n                        width: "15%",\n                    },\n                    {\n                        field: "date",\n                        key: "b",\n                        title: "Date",\n                        align: "left",\n                        width: "15%",\n                        // filter\n                        filter: {\n                            filterList: [\n                                {\n                                    value: 0,\n                                    label: "1900-05-20",\n                                    selected: false,\n                                },\n                                {\n                                    value: 1,\n                                    label: "1910-06-20",\n                                    selected: false,\n                                },\n                                {\n                                    value: 2,\n                                    label: "2000-07-20",\n                                    selected: false,\n                                },\n                                {\n                                    value: 3,\n                                    label: "2010-08-20",\n                                    selected: false,\n                                },\n                                {\n                                    value: 4,\n                                    label: "2020-09-20",\n                                    selected: false,\n                                },\n                            ],\n                            // filter confirm hook\n                            filterConfirm: (filterList) => {\n                                const labels = filterList\n                                    .filter((x) => x.selected)\n                                    .map((x) => x.label);\n                                this.searchByDateField(labels);\n                            },\n                            // filter reset hook\n                            filterReset: (filterList) => {\n                                this.searchByDateField([]);\n                            },\n                            // custom filter icon\n                            filterIcon: () => {\n                                return <ve-icon name="search" />;\n                            },\n                        },\n                    },\n                    {\n                        field: "hobby",\n                        key: "c",\n                        title: "Hobby",\n                        align: "center",\n                        width: "30%",\n                    },\n                    {\n                        field: "address",\n                        key: "d",\n                        title: "Address",\n                        align: "left",\n                        width: "40%",\n                    },\n                ],\n                // real table data\n                tableData: [],\n                // source data\n                sourceData: [\n                    {\n                        name: "John",\n                        date: "1900-05-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Shanghai",\n                        rowKey: 0,\n                    },\n                    {\n                        name: "Dickerson",\n                        date: "1910-06-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Beijing",\n                        rowKey: 1,\n                    },\n                    {\n                        name: "Larsen",\n                        date: "2000-07-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Chongqing",\n                        rowKey: 2,\n                    },\n                    {\n                        name: "Geneva",\n                        date: "2010-08-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Xiamen",\n                        rowKey: 3,\n                    },\n                    {\n                        name: "Jami",\n                        date: "2020-09-20",\n                        hobby: "coding and coding repeat",\n                        address: "No.1 Century Avenue, Shenzhen",\n                        rowKey: 4,\n                    },\n                ],\n            };\n        },\n        methods: {\n            // search by date field\n            searchByDateField(labels) {\n                this.tableData = this.sourceData.filter(\n                    (x) => labels.length === 0 || labels.includes(x.date),\n                );\n            },\n        },\n        created() {\n            this.tableData = this.sourceData.slice(0);\n        },\n    };\n<\/script>\n')])])])],2)],1)},Q=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",[e._v("filterIcon 回调函数，支持返回自定义的 icon。此处使用了内置的 "),t("code",[e._v('<ve-icon name="search" />')]),e._v(" 图标，你也可以其他图标库")])}];function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function V(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function W(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?V(Object(t),!0).forEach((function(n){Y(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):V(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function Y(e,n,t){return n=Z(n),n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Z(e){var n=ee(e,"string");return"symbol"===U(n)?n:String(n)}function ee(e,n){if("object"!==U(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==U(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}var ne={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("ve-table",{attrs:{"max-height":300,"fixed-header":!0,columns:e.columns,"table-data":e.tableData}})]],2)},n=[],t={data:function(){var e=this,n=this.$createElement;return{columns:[{field:"name",key:"a",title:"Name",align:"left",width:"15%"},{field:"date",key:"b",title:"Date",align:"left",width:"15%",filter:{filterList:[{value:0,label:"1900-05-20",selected:!1},{value:1,label:"1910-06-20",selected:!1},{value:2,label:"2000-07-20",selected:!1},{value:3,label:"2010-08-20",selected:!1},{value:4,label:"2020-09-20",selected:!1}],filterConfirm:function(n){var t=n.filter((function(e){return e.selected})).map((function(e){return e.label}));e.searchByDateField(t)},filterReset:function(n){e.searchByDateField([])},filterIcon:function(){return n("ve-icon",{attrs:{name:"search"}})}}},{field:"hobby",key:"c",title:"Hobby",align:"center",width:"30%"},{field:"address",key:"d",title:"Address",align:"left",width:"40%"}],tableData:[],sourceData:[{name:"John",date:"1900-05-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Shanghai",rowKey:0},{name:"Dickerson",date:"1910-06-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Beijing",rowKey:1},{name:"Larsen",date:"2000-07-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Chongqing",rowKey:2},{name:"Geneva",date:"2010-08-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Xiamen",rowKey:3},{name:"Jami",date:"2020-09-20",hobby:"coding and coding repeat",address:"No.1 Century Avenue, Shenzhen",rowKey:4}]}},methods:{searchByDateField:function(e){this.tableData=this.sourceData.filter((function(n){return 0===e.length||e.includes(n.date)}))}},created:function(){this.tableData=this.sourceData.slice(0)}};return W({render:e,staticRenderFns:n},t)}()}},te=ne,ae=Object(o["a"])(te,X,Q,!1,null,null,null),re=ae.exports,le=t("c9d6"),ie={name:"basic-main",components:{Explain:d,SingleFilter:O,MutilFilter:E,MixtureFilter:z,CustomIcon:re,API:le["a"]}},oe=ie,se=Object(o["a"])(oe,a,r,!1,null,null,null);n["default"]=se.exports},c9d6:function(e,n,t){"use strict";var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("tpl",{attrs:{desc:e.desc,anchor:e.anchor,"table-data":e.db.columns.filterProps.data,columns:e.db.columns.filterProps.columns}})],1)},r=[],l=t("3ef3"),i=t("d890"),o={components:{tpl:l["a"]},props:{anchor:{type:String,default:"筛选"},desc:{type:String,default:"filter"}},data:function(){return{db:i["a"]}}},s=o,c=t("2877"),d=Object(c["a"])(s,a,r,!1,null,null,null);n["a"]=d.exports}}]);
//# sourceMappingURL=chunk-211aab0f.8a1a6372.js.map