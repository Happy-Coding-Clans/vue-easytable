{"version":3,"sources":["webpack:///./src/docs/zh/ve-table/api/sort-option-props.vue?c225","webpack:///src/docs/zh/ve-table/api/sort-option-props.vue","webpack:///./src/docs/zh/ve-table/api/sort-option-props.vue?30ff","webpack:///./src/docs/zh/ve-table/api/sort-option-props.vue","webpack:///./src/docs/zh/ve-table/header-sort/main.vue?3e02","webpack:///./src/docs/zh/ve-table/header-sort/explain.md?2a77","webpack:///./src/docs/zh/ve-table/header-sort/explain.md","webpack:///./src/docs/zh/ve-table/header-sort/single-sort.md?607f","webpack:///src/docs/zh/ve-table/header-sort/single-sort.md","webpack:///./src/docs/zh/ve-table/header-sort/single-sort.md?d4fc","webpack:///./src/docs/zh/ve-table/header-sort/single-sort.md","webpack:///./src/docs/zh/ve-table/header-sort/multi-sort.md?5d82","webpack:///src/docs/zh/ve-table/header-sort/multi-sort.md","webpack:///./src/docs/zh/ve-table/header-sort/multi-sort.md?df42","webpack:///./src/docs/zh/ve-table/header-sort/multi-sort.md","webpack:///./src/docs/zh/ve-table/header-sort/sort-always.md?fca0","webpack:///src/docs/zh/ve-table/header-sort/sort-always.md","webpack:///./src/docs/zh/ve-table/header-sort/sort-always.md?186e","webpack:///./src/docs/zh/ve-table/header-sort/sort-always.md","webpack:///src/docs/zh/ve-table/header-sort/main.vue","webpack:///./src/docs/zh/ve-table/header-sort/main.vue?530e","webpack:///./src/docs/zh/ve-table/header-sort/main.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","desc","anchor","db","sortOption","data","columns","staticRenderFns","components","tpl","props","type","String","default","component","_v","_m","staticClass","script","slot","pre","name","tableData","democomponentExport","_this","sortChange","params","console","log","field","key","title","align","sortBy","age","weight","hobby","address","methods","sort","a","b","_objectSpread","multipleSort","slice","sortAlways","Explain","SingleSort","MultiSort","SortAlways","API"],"mappings":"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","file":"js/chunk-134340fb.f9c81aae.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('tpl',{attrs:{\"desc\":_vm.desc,\"anchor\":_vm.anchor,\"table-data\":_vm.db.sortOption.data,\"columns\":_vm.db.sortOption.columns}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <tpl\n            :desc=\"desc\"\n            :anchor=\"anchor\"\n            :table-data=\"db.sortOption.data\"\n            :columns=\"db.sortOption.columns\"\n        />\n    </div>\n</template>\n<script>\nimport tpl from \"@/comp/api-tpl\";\nimport { db } from \"./db\";\nexport default {\n    components: { tpl },\n    props: {\n        anchor: {\n            type: String,\n            default: \"排序配置\",\n        },\n        desc: {\n            type: String,\n            default: \"sortOption\",\n        },\n    },\n    data() {\n        return {\n            db: db,\n        };\n    },\n};\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sort-option-props.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sort-option-props.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./sort-option-props.vue?vue&type=template&id=c5aa4160&\"\nimport script from \"./sort-option-props.vue?vue&type=script&lang=js&\"\nexport * from \"./sort-option-props.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',[_vm._v(\"排序\")]),_c('Explain'),_c('SingleSort'),_c('MultiSort'),_c('SortAlways'),_c('API',{attrs:{\"title\":\"API\",\"anchor\":\"API\",\"desc\":\"sortOption 排序配置\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content example-md-doc\"},[_c('div',{staticClass:\"tip\"},[_c('p',[_vm._v(\"1、通过 \"),_c('code',[_vm._v(\"sortBy\")]),_vm._v(\"属性，设置需要排序的列。\"),_c('code',[_vm._v(\"sortBy=\\\"asc\\\"\")]),_vm._v(\"：默认当前列升序；\"),_c('code',[_vm._v(\"sortBy=\\\"desc\\\"\")]),_vm._v(\"：默认当前列降序；\"),_c('code',[_vm._v(\"sortBy=\\\"\\\"\")]),_vm._v(\"：允许排序但无排序规则\"),_c('br'),_vm._v(\" 2、通过 \"),_c('code',[_vm._v(\"sortOption\")]),_vm._v(\"对象，设置更多排序功能。排序功能需要配合\"),_c('code',[_vm._v(\"sortChange(param)\")]),_vm._v(\"回调函数实现，回调参数包含列的排序规则\")])])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./explain.md?vue&type=template&id=798b1957&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content example-md-doc\"},[_c('anchor',{attrs:{\"is-edit\":\"\",\"label\":\"单字段排序\",\"fileName\":\"single-sort.md\"}}),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"1、默认为单字段排序\"),_c('br'),_vm._v(\"2、\"),_c('code',[_vm._v(\"sortChange(params)\")]),_vm._v(\"回调函数接收列的排序规则\")])]),_c('template',{slot:\"source\"},[_c('element-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n    <ve-table :columns=\\\"columns\\\" :table-data=\\\"tableData\\\" :sort-option=\\\"sortOption\\\" border-y />\\n</template>\\n\\n<script>\\n    export default {\\n        data() {\\n            return {\\n                sortOption: {\\n                    sortChange: (params) => {\\n                        console.log(\\\"sortChange::\\\", params);\\n                        this.sortChange(params);\\n                    },\\n                },\\n                columns: [\\n                    { field: \\\"name\\\", key: \\\"a\\\", title: \\\"Name\\\", align: \\\"left\\\" },\\n                    {\\n                        field: \\\"age\\\",\\n                        key: \\\"b\\\",\\n                        title: \\\"Age\\\",\\n                        align: \\\"center\\\",\\n                        sortBy: \\\"\\\",\\n                    },\\n                    {\\n                        field: \\\"weight\\\",\\n                        key: \\\"c\\\",\\n                        title: \\\"Weight(kg)\\\",\\n                        align: \\\"center\\\",\\n                        sortBy: \\\"asc\\\",\\n                    },\\n                    {\\n                        field: \\\"hobby\\\",\\n                        key: \\\"d\\\",\\n                        title: \\\"Hobby\\\",\\n                        align: \\\"center\\\",\\n                    },\\n                    {\\n                        field: \\\"address\\\",\\n                        key: \\\"e\\\",\\n                        title: \\\"Address\\\",\\n                        align: \\\"left\\\",\\n                    },\\n                ],\\n                tableData: [\\n                    {\\n                        name: \\\"John\\\",\\n                        age: 25,\\n                        weight: 66,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Shanghai\\\",\\n                    },\\n                    {\\n                        name: \\\"Dickerson\\\",\\n                        age: 20,\\n                        weight: 70,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Beijing\\\",\\n                    },\\n                    {\\n                        name: \\\"Larsen\\\",\\n                        age: 18,\\n                        weight: 65,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Chongqing\\\",\\n                    },\\n                    {\\n                        name: \\\"Geneva\\\",\\n                        age: 17,\\n                        weight: 80,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Xiamen\\\",\\n                    },\\n                    {\\n                        name: \\\"Jami\\\",\\n                        age: 26,\\n                        weight: 72,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Shenzhen\\\",\\n                    },\\n                ],\\n            };\\n        },\\n        methods: {\\n            sortChange(params) {\\n                this.tableData.sort((a, b) => {\\n                    if (params.age) {\\n                        if (params.age === \\\"asc\\\") {\\n                            return a.age - b.age;\\n                        } else if (params.age === \\\"desc\\\") {\\n                            return b.age - a.age;\\n                        } else {\\n                            return 0;\\n                        }\\n                    } else if (params.weight) {\\n                        if (params.weight === \\\"asc\\\") {\\n                            return a.weight - b.weight;\\n                        } else if (params.weight === \\\"desc\\\") {\\n                            return b.weight - a.weight;\\n                        } else {\\n                            return 0;\\n                        }\\n                    }\\n                });\\n            },\\n        },\\n    };\\n</script>\\n\")])])])],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content example-md-doc\">\n        <anchor is-edit label=\"单字段排序\" fileName=\"single-sort.md\" />\n        <demo-block>\n        <div><p>1、默认为单字段排序<br>2、<code>sortChange(params)</code>回调函数接收列的排序规则</p>\n</div>\n        <template slot=\"source\"><element-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n    &lt;ve-table :columns=&quot;columns&quot; :table-data=&quot;tableData&quot; :sort-option=&quot;sortOption&quot; border-y /&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n    export default {\n        data() {\n            return {\n                sortOption: {\n                    sortChange: (params) =&gt; {\n                        console.log(&quot;sortChange::&quot;, params);\n                        this.sortChange(params);\n                    },\n                },\n                columns: [\n                    { field: &quot;name&quot;, key: &quot;a&quot;, title: &quot;Name&quot;, align: &quot;left&quot; },\n                    {\n                        field: &quot;age&quot;,\n                        key: &quot;b&quot;,\n                        title: &quot;Age&quot;,\n                        align: &quot;center&quot;,\n                        sortBy: &quot;&quot;,\n                    },\n                    {\n                        field: &quot;weight&quot;,\n                        key: &quot;c&quot;,\n                        title: &quot;Weight(kg)&quot;,\n                        align: &quot;center&quot;,\n                        sortBy: &quot;asc&quot;,\n                    },\n                    {\n                        field: &quot;hobby&quot;,\n                        key: &quot;d&quot;,\n                        title: &quot;Hobby&quot;,\n                        align: &quot;center&quot;,\n                    },\n                    {\n                        field: &quot;address&quot;,\n                        key: &quot;e&quot;,\n                        title: &quot;Address&quot;,\n                        align: &quot;left&quot;,\n                    },\n                ],\n                tableData: [\n                    {\n                        name: &quot;John&quot;,\n                        age: 25,\n                        weight: 66,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Shanghai&quot;,\n                    },\n                    {\n                        name: &quot;Dickerson&quot;,\n                        age: 20,\n                        weight: 70,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Beijing&quot;,\n                    },\n                    {\n                        name: &quot;Larsen&quot;,\n                        age: 18,\n                        weight: 65,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Chongqing&quot;,\n                    },\n                    {\n                        name: &quot;Geneva&quot;,\n                        age: 17,\n                        weight: 80,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Xiamen&quot;,\n                    },\n                    {\n                        name: &quot;Jami&quot;,\n                        age: 26,\n                        weight: 72,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Shenzhen&quot;,\n                    },\n                ],\n            };\n        },\n        methods: {\n            sortChange(params) {\n                this.tableData.sort((a, b) =&gt; {\n                    if (params.age) {\n                        if (params.age === &quot;asc&quot;) {\n                            return a.age - b.age;\n                        } else if (params.age === &quot;desc&quot;) {\n                            return b.age - a.age;\n                        } else {\n                            return 0;\n                        }\n                    } else if (params.weight) {\n                        if (params.weight === &quot;asc&quot;) {\n                            return a.weight - b.weight;\n                        } else if (params.weight === &quot;desc&quot;) {\n                            return b.weight - a.weight;\n                        } else {\n                            return 0;\n                        }\n                    }\n                });\n            },\n        },\n    };\n&lt;/script&gt;\n</code></pre></template></demo-block>\n      </section>\n    </template>\n    <script>\n        null\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('ve-table',{attrs:{\"columns\":_vm.columns,\"table-data\":_vm.tableData,\"sort-option\":_vm.sortOption,\"border-y\":\"\"}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n        data() {\n            return {\n                sortOption: {\n                    sortChange: (params) => {\n                        console.log(\"sortChange::\", params);\n                        this.sortChange(params);\n                    },\n                },\n                columns: [\n                    { field: \"name\", key: \"a\", title: \"Name\", align: \"left\" },\n                    {\n                        field: \"age\",\n                        key: \"b\",\n                        title: \"Age\",\n                        align: \"center\",\n                        sortBy: \"\",\n                    },\n                    {\n                        field: \"weight\",\n                        key: \"c\",\n                        title: \"Weight(kg)\",\n                        align: \"center\",\n                        sortBy: \"asc\",\n                    },\n                    {\n                        field: \"hobby\",\n                        key: \"d\",\n                        title: \"Hobby\",\n                        align: \"center\",\n                    },\n                    {\n                        field: \"address\",\n                        key: \"e\",\n                        title: \"Address\",\n                        align: \"left\",\n                    },\n                ],\n                tableData: [\n                    {\n                        name: \"John\",\n                        age: 25,\n                        weight: 66,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Shanghai\",\n                    },\n                    {\n                        name: \"Dickerson\",\n                        age: 20,\n                        weight: 70,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Beijing\",\n                    },\n                    {\n                        name: \"Larsen\",\n                        age: 18,\n                        weight: 65,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Chongqing\",\n                    },\n                    {\n                        name: \"Geneva\",\n                        age: 17,\n                        weight: 80,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Xiamen\",\n                    },\n                    {\n                        name: \"Jami\",\n                        age: 26,\n                        weight: 72,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Shenzhen\",\n                    },\n                ],\n            };\n        },\n        methods: {\n            sortChange(params) {\n                this.tableData.sort((a, b) => {\n                    if (params.age) {\n                        if (params.age === \"asc\") {\n                            return a.age - b.age;\n                        } else if (params.age === \"desc\") {\n                            return b.age - a.age;\n                        } else {\n                            return 0;\n                        }\n                    } else if (params.weight) {\n                        if (params.weight === \"asc\") {\n                            return a.weight - b.weight;\n                        } else if (params.weight === \"desc\") {\n                            return b.weight - a.weight;\n                        } else {\n                            return 0;\n                        }\n                    }\n                });\n            },\n        },\n    };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n    <style lang=\"less\">\n      \n    </style>\n  ","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!../../../../../node_modules/eslint-loader/index.js??ref--13-0!./single-sort.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!../../../../../node_modules/eslint-loader/index.js??ref--13-0!./single-sort.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./single-sort.md?vue&type=template&id=4ec3d7cb&\"\nimport script from \"./single-sort.md?vue&type=script&lang=js&\"\nexport * from \"./single-sort.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content example-md-doc\"},[_c('anchor',{attrs:{\"is-edit\":\"\",\"label\":\"多字段排序\",\"fileName\":\"multi-sort.md\"}}),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"1、通过\"),_c('code',[_vm._v(\"multipleSort=true\")]),_vm._v(\"开启多字段排序\"),_c('br'),_vm._v(\"2、排序字段的优先级需要自己指定，此处只是示例，具体逻辑自行实现（一般由后端服务返回）\")])]),_c('template',{slot:\"source\"},[_c('element-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n    <ve-table :columns=\\\"columns\\\" :table-data=\\\"tableData\\\" :sort-option=\\\"sortOption\\\" border-y />\\n</template>\\n\\n<script>\\n    export default {\\n        data() {\\n            return {\\n                sortOption: {\\n                    // 是否开启多字段排序\\n                    multipleSort: true,\\n                    sortChange: (params) => {\\n                        console.log(\\\"sortChange::\\\", params);\\n                        this.sortChange(params);\\n                    },\\n                },\\n                columns: [\\n                    { field: \\\"name\\\", key: \\\"a\\\", title: \\\"Name\\\", align: \\\"left\\\" },\\n                    {\\n                        field: \\\"age\\\",\\n                        key: \\\"b\\\",\\n                        title: \\\"Age\\\",\\n                        align: \\\"center\\\",\\n                        sortBy: \\\"\\\",\\n                    },\\n                    {\\n                        field: \\\"weight\\\",\\n                        key: \\\"c\\\",\\n                        title: \\\"Weight(kg)\\\",\\n                        align: \\\"center\\\",\\n                        sortBy: \\\"asc\\\",\\n                    },\\n                    {\\n                        field: \\\"hobby\\\",\\n                        key: \\\"d\\\",\\n                        title: \\\"Hobby\\\",\\n                        align: \\\"center\\\",\\n                    },\\n                    {\\n                        field: \\\"address\\\",\\n                        key: \\\"e\\\",\\n                        title: \\\"Address\\\",\\n                        align: \\\"left\\\",\\n                    },\\n                ],\\n                tableData: [\\n                    {\\n                        name: \\\"John\\\",\\n                        age: 25,\\n                        weight: 66,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Shanghai\\\",\\n                    },\\n                    {\\n                        name: \\\"Dickerson\\\",\\n                        age: 20,\\n                        weight: 70,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Beijing\\\",\\n                    },\\n                    {\\n                        name: \\\"Larsen\\\",\\n                        age: 18,\\n                        weight: 65,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Chongqing\\\",\\n                    },\\n                    {\\n                        name: \\\"Geneva\\\",\\n                        age: 17,\\n                        weight: 80,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Xiamen\\\",\\n                    },\\n                    {\\n                        name: \\\"Jami\\\",\\n                        age: 26,\\n                        weight: 72,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Shenzhen\\\",\\n                    },\\n                ],\\n            };\\n        },\\n        methods: {\\n            sortChange(params) {\\n                let data = this.tableData.slice(0);\\n\\n                data.sort((a, b) => {\\n                    if (params.age) {\\n                        if (params.age === \\\"asc\\\") {\\n                            return a.age - b.age;\\n                        } else if (params.age === \\\"desc\\\") {\\n                            return b.age - a.age;\\n                        } else {\\n                            return 0;\\n                        }\\n                    }\\n                });\\n\\n                data.sort((a, b) => {\\n                    if (params.weight) {\\n                        if (params.weight === \\\"asc\\\") {\\n                            return a.weight - b.weight;\\n                        } else if (params.weight === \\\"desc\\\") {\\n                            return b.weight - a.weight;\\n                        } else {\\n                            return 0;\\n                        }\\n                    }\\n                });\\n\\n                this.tableData = data;\\n            },\\n        },\\n    };\\n</script>\\n\")])])])],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content example-md-doc\">\n        <anchor is-edit label=\"多字段排序\" fileName=\"multi-sort.md\" />\n        <demo-block>\n        <div><p>1、通过<code>multipleSort=true</code>开启多字段排序<br>2、排序字段的优先级需要自己指定，此处只是示例，具体逻辑自行实现（一般由后端服务返回）</p>\n</div>\n        <template slot=\"source\"><element-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n    &lt;ve-table :columns=&quot;columns&quot; :table-data=&quot;tableData&quot; :sort-option=&quot;sortOption&quot; border-y /&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n    export default {\n        data() {\n            return {\n                sortOption: {\n                    // 是否开启多字段排序\n                    multipleSort: true,\n                    sortChange: (params) =&gt; {\n                        console.log(&quot;sortChange::&quot;, params);\n                        this.sortChange(params);\n                    },\n                },\n                columns: [\n                    { field: &quot;name&quot;, key: &quot;a&quot;, title: &quot;Name&quot;, align: &quot;left&quot; },\n                    {\n                        field: &quot;age&quot;,\n                        key: &quot;b&quot;,\n                        title: &quot;Age&quot;,\n                        align: &quot;center&quot;,\n                        sortBy: &quot;&quot;,\n                    },\n                    {\n                        field: &quot;weight&quot;,\n                        key: &quot;c&quot;,\n                        title: &quot;Weight(kg)&quot;,\n                        align: &quot;center&quot;,\n                        sortBy: &quot;asc&quot;,\n                    },\n                    {\n                        field: &quot;hobby&quot;,\n                        key: &quot;d&quot;,\n                        title: &quot;Hobby&quot;,\n                        align: &quot;center&quot;,\n                    },\n                    {\n                        field: &quot;address&quot;,\n                        key: &quot;e&quot;,\n                        title: &quot;Address&quot;,\n                        align: &quot;left&quot;,\n                    },\n                ],\n                tableData: [\n                    {\n                        name: &quot;John&quot;,\n                        age: 25,\n                        weight: 66,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Shanghai&quot;,\n                    },\n                    {\n                        name: &quot;Dickerson&quot;,\n                        age: 20,\n                        weight: 70,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Beijing&quot;,\n                    },\n                    {\n                        name: &quot;Larsen&quot;,\n                        age: 18,\n                        weight: 65,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Chongqing&quot;,\n                    },\n                    {\n                        name: &quot;Geneva&quot;,\n                        age: 17,\n                        weight: 80,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Xiamen&quot;,\n                    },\n                    {\n                        name: &quot;Jami&quot;,\n                        age: 26,\n                        weight: 72,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Shenzhen&quot;,\n                    },\n                ],\n            };\n        },\n        methods: {\n            sortChange(params) {\n                let data = this.tableData.slice(0);\n\n                data.sort((a, b) =&gt; {\n                    if (params.age) {\n                        if (params.age === &quot;asc&quot;) {\n                            return a.age - b.age;\n                        } else if (params.age === &quot;desc&quot;) {\n                            return b.age - a.age;\n                        } else {\n                            return 0;\n                        }\n                    }\n                });\n\n                data.sort((a, b) =&gt; {\n                    if (params.weight) {\n                        if (params.weight === &quot;asc&quot;) {\n                            return a.weight - b.weight;\n                        } else if (params.weight === &quot;desc&quot;) {\n                            return b.weight - a.weight;\n                        } else {\n                            return 0;\n                        }\n                    }\n                });\n\n                this.tableData = data;\n            },\n        },\n    };\n&lt;/script&gt;\n</code></pre></template></demo-block>\n      </section>\n    </template>\n    <script>\n        null\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('ve-table',{attrs:{\"columns\":_vm.columns,\"table-data\":_vm.tableData,\"sort-option\":_vm.sortOption,\"border-y\":\"\"}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n        data() {\n            return {\n                sortOption: {\n                    // 是否开启多字段排序\n                    multipleSort: true,\n                    sortChange: (params) => {\n                        console.log(\"sortChange::\", params);\n                        this.sortChange(params);\n                    },\n                },\n                columns: [\n                    { field: \"name\", key: \"a\", title: \"Name\", align: \"left\" },\n                    {\n                        field: \"age\",\n                        key: \"b\",\n                        title: \"Age\",\n                        align: \"center\",\n                        sortBy: \"\",\n                    },\n                    {\n                        field: \"weight\",\n                        key: \"c\",\n                        title: \"Weight(kg)\",\n                        align: \"center\",\n                        sortBy: \"asc\",\n                    },\n                    {\n                        field: \"hobby\",\n                        key: \"d\",\n                        title: \"Hobby\",\n                        align: \"center\",\n                    },\n                    {\n                        field: \"address\",\n                        key: \"e\",\n                        title: \"Address\",\n                        align: \"left\",\n                    },\n                ],\n                tableData: [\n                    {\n                        name: \"John\",\n                        age: 25,\n                        weight: 66,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Shanghai\",\n                    },\n                    {\n                        name: \"Dickerson\",\n                        age: 20,\n                        weight: 70,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Beijing\",\n                    },\n                    {\n                        name: \"Larsen\",\n                        age: 18,\n                        weight: 65,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Chongqing\",\n                    },\n                    {\n                        name: \"Geneva\",\n                        age: 17,\n                        weight: 80,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Xiamen\",\n                    },\n                    {\n                        name: \"Jami\",\n                        age: 26,\n                        weight: 72,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Shenzhen\",\n                    },\n                ],\n            };\n        },\n        methods: {\n            sortChange(params) {\n                let data = this.tableData.slice(0);\n\n                data.sort((a, b) => {\n                    if (params.age) {\n                        if (params.age === \"asc\") {\n                            return a.age - b.age;\n                        } else if (params.age === \"desc\") {\n                            return b.age - a.age;\n                        } else {\n                            return 0;\n                        }\n                    }\n                });\n\n                data.sort((a, b) => {\n                    if (params.weight) {\n                        if (params.weight === \"asc\") {\n                            return a.weight - b.weight;\n                        } else if (params.weight === \"desc\") {\n                            return b.weight - a.weight;\n                        } else {\n                            return 0;\n                        }\n                    }\n                });\n\n                this.tableData = data;\n            },\n        },\n    };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n    <style lang=\"less\">\n      \n    </style>\n  ","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!../../../../../node_modules/eslint-loader/index.js??ref--13-0!./multi-sort.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!../../../../../node_modules/eslint-loader/index.js??ref--13-0!./multi-sort.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./multi-sort.md?vue&type=template&id=59746511&\"\nimport script from \"./multi-sort.md?vue&type=script&lang=js&\"\nexport * from \"./multi-sort.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content example-md-doc\"},[_c('anchor',{attrs:{\"is-edit\":\"\",\"label\":\"排序切换\",\"fileName\":\"sort-always.md\"}}),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"1、通过\"),_c('code',[_vm._v(\"sortAlways=true\")]),_vm._v(\"允许排序只在升序和降序切换\")])]),_c('template',{slot:\"source\"},[_c('element-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n    <ve-table :columns=\\\"columns\\\" :table-data=\\\"tableData\\\" :sort-option=\\\"sortOption\\\" border-y />\\n</template>\\n\\n<script>\\n    export default {\\n        data() {\\n            return {\\n                sortOption: {\\n                    // sort always\\n                    sortAlways: true,\\n                    sortChange: (params) => {\\n                        console.log(\\\"sortChange::\\\", params);\\n                        this.sortChange(params);\\n                    },\\n                },\\n                columns: [\\n                    { field: \\\"name\\\", key: \\\"a\\\", title: \\\"Name\\\", align: \\\"left\\\" },\\n                    {\\n                        field: \\\"age\\\",\\n                        key: \\\"b\\\",\\n                        title: \\\"Age\\\",\\n                        align: \\\"center\\\",\\n                        sortBy: \\\"\\\",\\n                    },\\n                    {\\n                        field: \\\"weight\\\",\\n                        key: \\\"c\\\",\\n                        title: \\\"Weight(kg)\\\",\\n                        align: \\\"center\\\",\\n                        sortBy: \\\"asc\\\",\\n                    },\\n                    {\\n                        field: \\\"hobby\\\",\\n                        key: \\\"d\\\",\\n                        title: \\\"Hobby\\\",\\n                        align: \\\"center\\\",\\n                    },\\n                    {\\n                        field: \\\"address\\\",\\n                        key: \\\"e\\\",\\n                        title: \\\"Address\\\",\\n                        align: \\\"left\\\",\\n                    },\\n                ],\\n                tableData: [\\n                    {\\n                        name: \\\"John\\\",\\n                        age: 25,\\n                        weight: 66,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Shanghai\\\",\\n                    },\\n                    {\\n                        name: \\\"Dickerson\\\",\\n                        age: 20,\\n                        weight: 70,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Beijing\\\",\\n                    },\\n                    {\\n                        name: \\\"Larsen\\\",\\n                        age: 18,\\n                        weight: 65,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Chongqing\\\",\\n                    },\\n                    {\\n                        name: \\\"Geneva\\\",\\n                        age: 17,\\n                        weight: 80,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Xiamen\\\",\\n                    },\\n                    {\\n                        name: \\\"Jami\\\",\\n                        age: 26,\\n                        weight: 72,\\n                        hobby: \\\"coding and coding repeat\\\",\\n                        address: \\\"No.1 Century Avenue, Shenzhen\\\",\\n                    },\\n                ],\\n            };\\n        },\\n        methods: {\\n            sortChange(params) {\\n                this.tableData.sort((a, b) => {\\n                    if (params.age) {\\n                        if (params.age === \\\"asc\\\") {\\n                            return a.age - b.age;\\n                        } else if (params.age === \\\"desc\\\") {\\n                            return b.age - a.age;\\n                        } else {\\n                            return 0;\\n                        }\\n                    } else if (params.weight) {\\n                        if (params.weight === \\\"asc\\\") {\\n                            return a.weight - b.weight;\\n                        } else if (params.weight === \\\"desc\\\") {\\n                            return b.weight - a.weight;\\n                        } else {\\n                            return 0;\\n                        }\\n                    }\\n                });\\n            },\\n        },\\n    };\\n</script>\\n\")])])])],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content example-md-doc\">\n        <anchor is-edit label=\"排序切换\" fileName=\"sort-always.md\" />\n        <demo-block>\n        <div><p>1、通过<code>sortAlways=true</code>允许排序只在升序和降序切换</p>\n</div>\n        <template slot=\"source\"><element-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n    &lt;ve-table :columns=&quot;columns&quot; :table-data=&quot;tableData&quot; :sort-option=&quot;sortOption&quot; border-y /&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n    export default {\n        data() {\n            return {\n                sortOption: {\n                    // sort always\n                    sortAlways: true,\n                    sortChange: (params) =&gt; {\n                        console.log(&quot;sortChange::&quot;, params);\n                        this.sortChange(params);\n                    },\n                },\n                columns: [\n                    { field: &quot;name&quot;, key: &quot;a&quot;, title: &quot;Name&quot;, align: &quot;left&quot; },\n                    {\n                        field: &quot;age&quot;,\n                        key: &quot;b&quot;,\n                        title: &quot;Age&quot;,\n                        align: &quot;center&quot;,\n                        sortBy: &quot;&quot;,\n                    },\n                    {\n                        field: &quot;weight&quot;,\n                        key: &quot;c&quot;,\n                        title: &quot;Weight(kg)&quot;,\n                        align: &quot;center&quot;,\n                        sortBy: &quot;asc&quot;,\n                    },\n                    {\n                        field: &quot;hobby&quot;,\n                        key: &quot;d&quot;,\n                        title: &quot;Hobby&quot;,\n                        align: &quot;center&quot;,\n                    },\n                    {\n                        field: &quot;address&quot;,\n                        key: &quot;e&quot;,\n                        title: &quot;Address&quot;,\n                        align: &quot;left&quot;,\n                    },\n                ],\n                tableData: [\n                    {\n                        name: &quot;John&quot;,\n                        age: 25,\n                        weight: 66,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Shanghai&quot;,\n                    },\n                    {\n                        name: &quot;Dickerson&quot;,\n                        age: 20,\n                        weight: 70,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Beijing&quot;,\n                    },\n                    {\n                        name: &quot;Larsen&quot;,\n                        age: 18,\n                        weight: 65,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Chongqing&quot;,\n                    },\n                    {\n                        name: &quot;Geneva&quot;,\n                        age: 17,\n                        weight: 80,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Xiamen&quot;,\n                    },\n                    {\n                        name: &quot;Jami&quot;,\n                        age: 26,\n                        weight: 72,\n                        hobby: &quot;coding and coding repeat&quot;,\n                        address: &quot;No.1 Century Avenue, Shenzhen&quot;,\n                    },\n                ],\n            };\n        },\n        methods: {\n            sortChange(params) {\n                this.tableData.sort((a, b) =&gt; {\n                    if (params.age) {\n                        if (params.age === &quot;asc&quot;) {\n                            return a.age - b.age;\n                        } else if (params.age === &quot;desc&quot;) {\n                            return b.age - a.age;\n                        } else {\n                            return 0;\n                        }\n                    } else if (params.weight) {\n                        if (params.weight === &quot;asc&quot;) {\n                            return a.weight - b.weight;\n                        } else if (params.weight === &quot;desc&quot;) {\n                            return b.weight - a.weight;\n                        } else {\n                            return 0;\n                        }\n                    }\n                });\n            },\n        },\n    };\n&lt;/script&gt;\n</code></pre></template></demo-block>\n      </section>\n    </template>\n    <script>\n        null\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('ve-table',{attrs:{\"columns\":_vm.columns,\"table-data\":_vm.tableData,\"sort-option\":_vm.sortOption,\"border-y\":\"\"}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n        data() {\n            return {\n                sortOption: {\n                    // sort always\n                    sortAlways: true,\n                    sortChange: (params) => {\n                        console.log(\"sortChange::\", params);\n                        this.sortChange(params);\n                    },\n                },\n                columns: [\n                    { field: \"name\", key: \"a\", title: \"Name\", align: \"left\" },\n                    {\n                        field: \"age\",\n                        key: \"b\",\n                        title: \"Age\",\n                        align: \"center\",\n                        sortBy: \"\",\n                    },\n                    {\n                        field: \"weight\",\n                        key: \"c\",\n                        title: \"Weight(kg)\",\n                        align: \"center\",\n                        sortBy: \"asc\",\n                    },\n                    {\n                        field: \"hobby\",\n                        key: \"d\",\n                        title: \"Hobby\",\n                        align: \"center\",\n                    },\n                    {\n                        field: \"address\",\n                        key: \"e\",\n                        title: \"Address\",\n                        align: \"left\",\n                    },\n                ],\n                tableData: [\n                    {\n                        name: \"John\",\n                        age: 25,\n                        weight: 66,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Shanghai\",\n                    },\n                    {\n                        name: \"Dickerson\",\n                        age: 20,\n                        weight: 70,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Beijing\",\n                    },\n                    {\n                        name: \"Larsen\",\n                        age: 18,\n                        weight: 65,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Chongqing\",\n                    },\n                    {\n                        name: \"Geneva\",\n                        age: 17,\n                        weight: 80,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Xiamen\",\n                    },\n                    {\n                        name: \"Jami\",\n                        age: 26,\n                        weight: 72,\n                        hobby: \"coding and coding repeat\",\n                        address: \"No.1 Century Avenue, Shenzhen\",\n                    },\n                ],\n            };\n        },\n        methods: {\n            sortChange(params) {\n                this.tableData.sort((a, b) => {\n                    if (params.age) {\n                        if (params.age === \"asc\") {\n                            return a.age - b.age;\n                        } else if (params.age === \"desc\") {\n                            return b.age - a.age;\n                        } else {\n                            return 0;\n                        }\n                    } else if (params.weight) {\n                        if (params.weight === \"asc\") {\n                            return a.weight - b.weight;\n                        } else if (params.weight === \"desc\") {\n                            return b.weight - a.weight;\n                        } else {\n                            return 0;\n                        }\n                    }\n                });\n            },\n        },\n    };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n    <style lang=\"less\">\n      \n    </style>\n  ","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!../../../../../node_modules/eslint-loader/index.js??ref--13-0!./sort-always.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!../../../../../node_modules/eslint-loader/index.js??ref--13-0!./sort-always.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./sort-always.md?vue&type=template&id=1be3e051&\"\nimport script from \"./sort-always.md?vue&type=script&lang=js&\"\nexport * from \"./sort-always.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div>\n        <h2>排序</h2>\n        <Explain />\n        <SingleSort />\n        <MultiSort />\n        <SortAlways />\n        <API title=\"API\" anchor=\"API\" desc=\"sortOption 排序配置\" />\n    </div>\n</template>\n<script>\nimport Explain from \"./explain.md\";\nimport SingleSort from \"./single-sort.md\";\nimport MultiSort from \"./multi-sort.md\";\nimport SortAlways from \"./sort-always.md\";\nimport API from \"../api/sort-option-props\";\n\nexport default {\n    name: \"basic-main\",\n    components: {\n        Explain,\n        SingleSort,\n        MultiSort,\n        SortAlways,\n        API,\n    },\n};\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./main.vue?vue&type=template&id=6108a6c8&\"\nimport script from \"./main.vue?vue&type=script&lang=js&\"\nexport * from \"./main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}